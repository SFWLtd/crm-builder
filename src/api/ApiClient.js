/* tslint:disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v8.6.6221.23503 (NJsonSchema v7.6.6221.22528) (http://NSwag.org)
// </auto-generated>
//----------------------
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AuthenticationClient = (function () {
    function AuthenticationClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.baseUrl = baseUrl ? baseUrl : "";
        this.http = http ? http : window;
    }
    AuthenticationClient.prototype.authenticate = function (request, id) {
        var _this = this;
        var url_ = this.baseUrl + "/api/Authentication/Authenticate/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        var content_ = JSON.stringify(request ? request.toJS() : null);
        return this.http.fetch(url_, {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json; charset=UTF-8",
                "Accept": "application/json; charset=UTF-8"
            }
        }).then(function (response) {
            return _this.processAuthenticate(response);
        });
    };
    AuthenticationClient.prototype.processAuthenticate = function (response) {
        var _this = this;
        return response.text().then(function (responseText) {
            var status = response.status;
            if (status === 200) {
                var result200 = null;
                var resultData200 = responseText === "" ? null : JSON.parse(responseText, _this.jsonParseReviver);
                result200 = resultData200 ? GlobalJsonResultOfAuthenticateResult.fromJS(resultData200) : null;
                return result200;
            }
            else if (status !== 200 && status !== 204) {
                _this.throwException("An unexpected server error occurred.", status, responseText);
            }
            return null;
        });
    };
    AuthenticationClient.prototype.throwException = function (message, status, response, result) {
        if (result !== null && result !== undefined)
            throw result;
        else
            throw new SwaggerException(message, status, response);
    };
    return AuthenticationClient;
}());
exports.AuthenticationClient = AuthenticationClient;
var AuthenticateRequest = (function () {
    function AuthenticateRequest(data) {
        if (data !== undefined) {
            this.authenticationType = data["AuthenticationType"] !== undefined ? data["AuthenticationType"] : null;
            this.userName = data["UserName"] !== undefined ? data["UserName"] : null;
            this.emailAddress = data["EmailAddress"] !== undefined ? data["EmailAddress"] : null;
            this.password = data["Password"] !== undefined ? data["Password"] : null;
            this.domain = data["Domain"] !== undefined ? data["Domain"] : null;
            this.url = data["Url"] !== undefined ? data["Url"] : null;
        }
    }
    AuthenticateRequest.fromJS = function (data) {
        return new AuthenticateRequest(data);
    };
    AuthenticateRequest.prototype.toJS = function (data) {
        data = data === undefined ? {} : data;
        data["AuthenticationType"] = this.authenticationType !== undefined ? this.authenticationType : null;
        data["UserName"] = this.userName !== undefined ? this.userName : null;
        data["EmailAddress"] = this.emailAddress !== undefined ? this.emailAddress : null;
        data["Password"] = this.password !== undefined ? this.password : null;
        data["Domain"] = this.domain !== undefined ? this.domain : null;
        data["Url"] = this.url !== undefined ? this.url : null;
        return data;
    };
    AuthenticateRequest.prototype.toJSON = function () {
        return JSON.stringify(this.toJS());
    };
    AuthenticateRequest.prototype.clone = function () {
        var json = this.toJSON();
        return new AuthenticateRequest(JSON.parse(json));
    };
    return AuthenticateRequest;
}());
exports.AuthenticateRequest = AuthenticateRequest;
var AuthenticationType;
(function (AuthenticationType) {
    AuthenticationType[AuthenticationType["Dynamics365"] = 0] = "Dynamics365";
    AuthenticationType[AuthenticationType["Ifd"] = 1] = "Ifd";
    AuthenticationType[AuthenticationType["OnPremise"] = 2] = "OnPremise";
})(AuthenticationType = exports.AuthenticationType || (exports.AuthenticationType = {}));
var GlobalJsonResultOfAuthenticateResult = (function () {
    function GlobalJsonResultOfAuthenticateResult(data) {
        if (data !== undefined) {
            this.successful = data["Successful"] !== undefined ? data["Successful"] : null;
            this.result = data["Result"] ? AuthenticateResult.fromJS(data["Result"]) : null;
            this.errorMessage = data["ErrorMessage"] !== undefined ? data["ErrorMessage"] : null;
            this.stackTrace = data["StackTrace"] !== undefined ? data["StackTrace"] : null;
            this.statusCode = data["StatusCode"] !== undefined ? data["StatusCode"] : null;
        }
    }
    GlobalJsonResultOfAuthenticateResult.fromJS = function (data) {
        return new GlobalJsonResultOfAuthenticateResult(data);
    };
    GlobalJsonResultOfAuthenticateResult.prototype.toJS = function (data) {
        data = data === undefined ? {} : data;
        data["Successful"] = this.successful !== undefined ? this.successful : null;
        data["Result"] = this.result ? this.result.toJS() : null;
        data["ErrorMessage"] = this.errorMessage !== undefined ? this.errorMessage : null;
        data["StackTrace"] = this.stackTrace !== undefined ? this.stackTrace : null;
        data["StatusCode"] = this.statusCode !== undefined ? this.statusCode : null;
        return data;
    };
    GlobalJsonResultOfAuthenticateResult.prototype.toJSON = function () {
        return JSON.stringify(this.toJS());
    };
    GlobalJsonResultOfAuthenticateResult.prototype.clone = function () {
        var json = this.toJSON();
        return new GlobalJsonResultOfAuthenticateResult(JSON.parse(json));
    };
    return GlobalJsonResultOfAuthenticateResult;
}());
exports.GlobalJsonResultOfAuthenticateResult = GlobalJsonResultOfAuthenticateResult;
var AuthenticateResult = (function () {
    function AuthenticateResult(data) {
        if (data !== undefined) {
            this.token = data["Token"] !== undefined ? data["Token"] : null;
        }
    }
    AuthenticateResult.fromJS = function (data) {
        return new AuthenticateResult(data);
    };
    AuthenticateResult.prototype.toJS = function (data) {
        data = data === undefined ? {} : data;
        data["Token"] = this.token !== undefined ? this.token : null;
        return data;
    };
    AuthenticateResult.prototype.toJSON = function () {
        return JSON.stringify(this.toJS());
    };
    AuthenticateResult.prototype.clone = function () {
        var json = this.toJSON();
        return new AuthenticateResult(JSON.parse(json));
    };
    return AuthenticateResult;
}());
exports.AuthenticateResult = AuthenticateResult;
var HttpStatusCode;
(function (HttpStatusCode) {
    HttpStatusCode[HttpStatusCode["Continue"] = 100] = "Continue";
    HttpStatusCode[HttpStatusCode["SwitchingProtocols"] = 101] = "SwitchingProtocols";
    HttpStatusCode[HttpStatusCode["OK"] = 200] = "OK";
    HttpStatusCode[HttpStatusCode["Created"] = 201] = "Created";
    HttpStatusCode[HttpStatusCode["Accepted"] = 202] = "Accepted";
    HttpStatusCode[HttpStatusCode["NonAuthoritativeInformation"] = 203] = "NonAuthoritativeInformation";
    HttpStatusCode[HttpStatusCode["NoContent"] = 204] = "NoContent";
    HttpStatusCode[HttpStatusCode["ResetContent"] = 205] = "ResetContent";
    HttpStatusCode[HttpStatusCode["PartialContent"] = 206] = "PartialContent";
    HttpStatusCode[HttpStatusCode["MultipleChoices"] = 300] = "MultipleChoices";
    HttpStatusCode[HttpStatusCode["Ambiguous"] = 300] = "Ambiguous";
    HttpStatusCode[HttpStatusCode["MovedPermanently"] = 301] = "MovedPermanently";
    HttpStatusCode[HttpStatusCode["Moved"] = 301] = "Moved";
    HttpStatusCode[HttpStatusCode["Found"] = 302] = "Found";
    HttpStatusCode[HttpStatusCode["Redirect"] = 302] = "Redirect";
    HttpStatusCode[HttpStatusCode["SeeOther"] = 303] = "SeeOther";
    HttpStatusCode[HttpStatusCode["RedirectMethod"] = 303] = "RedirectMethod";
    HttpStatusCode[HttpStatusCode["NotModified"] = 304] = "NotModified";
    HttpStatusCode[HttpStatusCode["UseProxy"] = 305] = "UseProxy";
    HttpStatusCode[HttpStatusCode["Unused"] = 306] = "Unused";
    HttpStatusCode[HttpStatusCode["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpStatusCode[HttpStatusCode["RedirectKeepVerb"] = 307] = "RedirectKeepVerb";
    HttpStatusCode[HttpStatusCode["BadRequest"] = 400] = "BadRequest";
    HttpStatusCode[HttpStatusCode["Unauthorized"] = 401] = "Unauthorized";
    HttpStatusCode[HttpStatusCode["PaymentRequired"] = 402] = "PaymentRequired";
    HttpStatusCode[HttpStatusCode["Forbidden"] = 403] = "Forbidden";
    HttpStatusCode[HttpStatusCode["NotFound"] = 404] = "NotFound";
    HttpStatusCode[HttpStatusCode["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpStatusCode[HttpStatusCode["NotAcceptable"] = 406] = "NotAcceptable";
    HttpStatusCode[HttpStatusCode["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpStatusCode[HttpStatusCode["RequestTimeout"] = 408] = "RequestTimeout";
    HttpStatusCode[HttpStatusCode["Conflict"] = 409] = "Conflict";
    HttpStatusCode[HttpStatusCode["Gone"] = 410] = "Gone";
    HttpStatusCode[HttpStatusCode["LengthRequired"] = 411] = "LengthRequired";
    HttpStatusCode[HttpStatusCode["PreconditionFailed"] = 412] = "PreconditionFailed";
    HttpStatusCode[HttpStatusCode["RequestEntityTooLarge"] = 413] = "RequestEntityTooLarge";
    HttpStatusCode[HttpStatusCode["RequestUriTooLong"] = 414] = "RequestUriTooLong";
    HttpStatusCode[HttpStatusCode["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
    HttpStatusCode[HttpStatusCode["RequestedRangeNotSatisfiable"] = 416] = "RequestedRangeNotSatisfiable";
    HttpStatusCode[HttpStatusCode["ExpectationFailed"] = 417] = "ExpectationFailed";
    HttpStatusCode[HttpStatusCode["UpgradeRequired"] = 426] = "UpgradeRequired";
    HttpStatusCode[HttpStatusCode["InternalServerError"] = 500] = "InternalServerError";
    HttpStatusCode[HttpStatusCode["NotImplemented"] = 501] = "NotImplemented";
    HttpStatusCode[HttpStatusCode["BadGateway"] = 502] = "BadGateway";
    HttpStatusCode[HttpStatusCode["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpStatusCode[HttpStatusCode["GatewayTimeout"] = 504] = "GatewayTimeout";
    HttpStatusCode[HttpStatusCode["HttpVersionNotSupported"] = 505] = "HttpVersionNotSupported";
})(HttpStatusCode = exports.HttpStatusCode || (exports.HttpStatusCode = {}));
var SwaggerException = (function (_super) {
    __extends(SwaggerException, _super);
    function SwaggerException(message, status, response, result) {
        var _this = _super.call(this) || this;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.result = result;
        return _this;
    }
    return SwaggerException;
}(Error));
exports.SwaggerException = SwaggerException;
